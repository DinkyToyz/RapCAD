--- a/usr/include/CGAL/Mpzf.h
+++ b/usr/include/CGAL/Mpzf.h
@@ -253,15 +253,15 @@ struct Mpzf {
   typedef Mpzf_impl::no_pool<mp_limb_t*,Mpzf> pool;
 //#endif
 
-  mp_limb_t* data_; /* data_[0] is never 0 (except possibly for 0). */
+  mp_limb_t* data_; /* coverity[member_decl] */
   inline mp_limb_t*& data() { return data_; }
   inline mp_limb_t const* data() const { return data_; }
 
 #ifdef CGAL_MPZF_USE_CACHE
   mp_limb_t cache[cache_size + 1];
 #endif
-  int size; /* Number of relevant limbs in data_. */
-  int exp; /* The number is data_ (an integer) * 2 ^ (64 * exp). */
+  int size; /* coverity[member_decl] */
+  int exp; /* coverity[member_decl] */
   typedef int Exponent_type;
   typedef int Size_type;
 
@@ -300,6 +300,8 @@ struct Mpzf {
     pool::push(data());
   }
 
+  // These constructors intentionally
+  // don't initialize any members
   Mpzf(noalloc){}
   Mpzf(allocate,int i) { init(i); }
 

