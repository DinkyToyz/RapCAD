--- a/usr/include/CGAL/Nef_3/SNC_io_parser.h
+++ b/usr/include/CGAL/Nef_3/SNC_io_parser.h
@@ -1604,18 +1604,22 @@ read_edge(Halfedge_handle eh) {
   OK = OK && test_string("{");
 
   in >> index;
-  eh->twin() = Edge_of[index];
+  if(index>=0 && index<Edge_of.size())
+    eh->twin() = Edge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  eh->center_vertex() = Vertex_of[index];
+  if(index>=0 && index<Vertex_of.size())
+    eh->center_vertex() = Vertex_of[index];
   OK = OK && test_string(",");
   in >> index;
   if(index == 0) {
     in >> index;
-    eh->out_sedge() = SEdge_of[index];
+    if(index>=0 && index<SEdge_of.size())
+      eh->out_sedge() = SEdge_of[index];
   } else {
     in >> index;
-    eh->incident_sface() = SFace_of[index];
+    if(index>=0 && index<SFace_of.size())
+      eh->incident_sface() = SFace_of[index];
   }
   OK = OK && test_string("|");
 #ifdef CGAL_NEF_NATURAL_COORDINATE_INPUT
@@ -1669,14 +1673,16 @@ read_facet(Halffacet_handle fh) {
   OK = OK && test_string("{");
 
   in >> index;
-  fh->twin() = Halffacet_of[index];
+  if(index>=0 && index<Halffacet_of.size())
+    fh->twin() = Halffacet_of[index];
   OK = OK && test_string(",");
 
   in >> cc;
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    fh->boundary_entry_objects().push_back(make_object(SEdge_of[index]));
+    if(index>=0 && index<SEdge_of.size())
+      fh->boundary_entry_objects().push_back(make_object(SEdge_of[index]));
     in >> cc;
   }
 
@@ -1684,12 +1690,15 @@ read_facet(Halffacet_handle fh) {
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    fh->boundary_entry_objects().push_back(make_object(SLoop_of[index]));
+    if(index>=0 && index<SLoop_of.size())
+      fh->boundary_entry_objects().push_back(make_object(SLoop_of[index]));
     in >> cc;
   }
 
   in >> index;
-  fh->incident_volume() = Volume_of[index+addInfiBox];
+  index+=addInfiBox;
+  if(index>=0 && index<Volume_of.size())
+    fh->incident_volume() = Volume_of[index];
   OK = OK && test_string("|");
 #ifdef CGAL_NEF_NATURAL_COORDINATE_INPUT
   in >> a >> b >> c >> d;
@@ -1731,7 +1740,8 @@ read_volume(Volume_handle ch) {
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    ch->shell_entry_objects().push_back(make_object(SFace_of[index]));
+    if(index>=0 && index<SFace_of.size())
+      ch->shell_entry_objects().push_back(make_object(SFace_of[index]));
     in >> cc;
   }
   in >> ch->mark();
@@ -1781,28 +1791,36 @@ read_sedge(SHalfedge_handle seh) {
   OK = OK && test_string("{");
 
   in >> index;
-  seh->twin() = SEdge_of[index];
+  if(index>=0 && index<SEdge_of.size())
+    seh->twin() = SEdge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->sprev() = SEdge_of[index];
+  if(index>=0 && index<SEdge_of.size())
+    seh->sprev() = SEdge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->snext() = SEdge_of[index];
+  if(index>=0 && index<SEdge_of.size())
+    seh->snext() = SEdge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->source() = Edge_of[index];
+  if(index>=0 && index<Edge_of.size())
+    seh->source() = Edge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->incident_sface() = SFace_of[index];
+  if(index>=0 && index<SFace_of.size())
+    seh->incident_sface() = SFace_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->prev() = SEdge_of[index];
+  if(index>=0 && index<SEdge_of.size())
+    seh->prev() = SEdge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->next() = SEdge_of[index];
+  if(index>=0 && index<SEdge_of.size())
+    seh->next() = SEdge_of[index];
   OK = OK && test_string(",");
   in >> index;
-  seh->facet() = Halffacet_of[index];
+  if(index>=0 && index<Halffacet_of.size())
+    seh->facet() = Halffacet_of[index];
   OK = OK && test_string("|");
 #ifdef CGAL_NEF_NATURAL_COORDINATE_INPUT
   in >> a >> b >> c >> d;
@@ -1852,13 +1870,16 @@ read_sloop(SHalfloop_handle slh) {
   OK = OK && test_string("{");
 
   in >> index;
-  slh->twin() = SLoop_of[index];
+  if(index>=0 && index<SLoop_of.size())
+    slh->twin() = SLoop_of[index];
   OK = OK && test_string(",");
   in >> index;
-  slh->incident_sface() = SFace_of[index];
+  if(index>=0 && index<SFace_of.size())
+    slh->incident_sface() = SFace_of[index];
   OK = OK && test_string(",");
   in >> index;
-  slh->facet() = Halffacet_of[index];
+  if(index>=0 && index<Halffacet_of.size())
+    slh->facet() = Halffacet_of[index];
   OK = OK && test_string("|");
 #ifdef CGAL_NEF_NATURAL_COORDINATE_INPUT
   in >> a >> b >> c >> d;
@@ -1904,16 +1925,19 @@ read_sface(SFace_handle sfh) {
   OK = OK && test_string("{");
 
   in >> index;
-  sfh->center_vertex() = Vertex_of[index];
+  if(index>=0 && index<Vertex_of.size())
+    sfh->center_vertex() = Vertex_of[index];
   OK = OK && test_string(",");
 
   in >> cc;
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    //    sfh->boundary_entry_objects().push_back(SEdge_of[index]);
-    SM_decorator SD(&*sfh->center_vertex());
-    SD.link_as_face_cycle(SEdge_of[index],sfh);
+    if(index>=0 && index<SEdge_of.size()) {
+      //    sfh->boundary_entry_objects().push_back(SEdge_of[index]);
+      SM_decorator SD(&*sfh->center_vertex());
+      SD.link_as_face_cycle(SEdge_of[index],sfh);
+    }
     in >> cc;
   }
 
@@ -1921,8 +1945,10 @@ read_sface(SFace_handle sfh) {
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    sfh->boundary_entry_objects().push_back(make_object(Edge_of[index]));
-    this->sncp()->store_sm_boundary_item(Edge_of[index], --(sfh->sface_cycles_end()));
+    if(index>=0 && index<Edge_of.size()) {
+      sfh->boundary_entry_objects().push_back(make_object(Edge_of[index]));
+      this->sncp()->store_sm_boundary_item(Edge_of[index], --(sfh->sface_cycles_end()));
+    }
     in >> cc;
   }
 
@@ -1930,13 +1956,17 @@ read_sface(SFace_handle sfh) {
   while(isdigit(cc)) {
     in.putback(cc);
     in >> index;
-    sfh->boundary_entry_objects().push_back(make_object(SLoop_of[index]));
-    this->sncp()->store_sm_boundary_item(SLoop_of[index], --(sfh->sface_cycles_end()));
+    if(index>=0 && index<SLoop_of.size()) {
+      sfh->boundary_entry_objects().push_back(make_object(SLoop_of[index]));
+      this->sncp()->store_sm_boundary_item(SLoop_of[index], --(sfh->sface_cycles_end()));
+    }
     in >> cc;
   }
 
   in >> index;
-  sfh->volume() = Volume_of[index+addInfiBox];
+  index+=addInfiBox;
+  if(index>=0 && index<Volume_of.size())
+    sfh->volume() = Volume_of[index];
   OK = OK && test_string("}");
   in >> sfh->mark();
 

